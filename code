package prog5;
import java.util.Scanner;
import java.util.Random;
import java.io.File;
class mergeSort
{
	static int max=10000;
	void merge(int[]array,int low,int mid,int high)
	{
		int i=low;
		int j=mid+1;
		int k=low;
		int[] resarray=new int[max];
		while(i<=mid&&j<=high)
		{
			if(array[i]<array[j])
			{
				resarray[k]=array[i];
				i++;
				k++;
			}
			else
			{
				resarray[k]=array[j];
				j++;
				k++;
			}
		}
		while(i<=mid)
			resarray[k++]=array[i++];
		while(j<=high)
			resarray[k++]=array[j++];
		for(int m=low;m<=high;m++)
			array[m]=resarray[m];
	}
	void mergesort(int[]array,int low,int high)
	{
		if(low<high)
		{
			int mid=(low+high)/2;
			mergesort(array,low,mid);
			mergesort(array,mid+1,high);
			merge(array,low,mid,high);
		}
	}
}
public class prog5 
{
	public static void main(String[] args) 
	{
		int i,n=0;
		Scanner In=new Scanner(System.in);
		mergeSort obj=new mergeSort();
		int[] a=new int[10000];
		System.out.println("press 1 to read numbers from keyboard\n press 2 to generate random variables \n press 3 toread input from the file\n enter your choice:");
		int choice=In.nextInt();
		switch(choice)
		{
		case 1:System.out.println("enter the number of elements to be sorted");
		n=In.nextInt();
		System.out.println("enter"+n+"numbers");
		for(i=0;i<n;i++)
		{
			a[i]=In.nextInt();
		}
		break;
		case 2:System.out.println("enter the number of elements to be sorted");
		n=In.nextInt();
		Random rand=new Random();
		for(i=0;i<n;i++)
		{
			a[i]=rand.nextInt(10000);
		}
		break;
		case 3:File file=new File("");
		i=0;
		try
		{
			Scanner sc=new Scanner(file);
			while(sc.hasNextInt())
			{
				a[i]=sc.nextInt();
				System.out.println(a[i]);
				i++;
			}
		}			
			catch(Exception e)
			{
				System.out.println(e);
			}
			default:System.out.println("wrong choice");
	    }
		System.out.println("/n array elements to be sorted are");
		for(i=0;i<n;i++)
			System.out.println(a[i]+" ");
		long start=System.nanoTime();
		obj.mergesort(a,0,n-1);
		long end=System.nanoTime();
		System.out.println("/n /n the sorted elements are");
		for(i=0;i<n;i++)
			System.out.println(a[i]+" ");
		System.out.println("\n \n the time taken to sort elements by merge sort method is"+(end-start)+" nanoseconds");
	}

}
